Let code speak
==============

#!/usr/bin/env python
# Author: <Chaobin Tang ctang@redhat.com>
from ws4py.server import geventserver

from frog.core.websockets.base import ApplicationSocket
from frog.contrib.events.handlers.base import BaseJsonEventHandler, \
                                              JsonEventDispatcherApplication

class EchoEventHandler(BaseJsonEventHandler):

    event_type = "echo"

    def proceed(self, data):
        return {'type': 'reply', 'data': data}

class NewConnectionHandler(BaseJsonEventHandler):

    event_type = "_opened"

    def proceed(self, data):
        print "new connection established"
        return {'type': 'reply', 'data': {'msg': 'welcome'}}

This is pretty much what you need to write to write a websocket application that
talks with client using an event-driven approach.

In client side, the following code will enable the communication with the server:

<script>
  var server = 'ws://server-host:port/';
  var connection = new WebSocket(server);
  connection.onmessage = function(event){
    console.log(event.data);
  }

  # a better way is using jquery.websocket for json encoding$decoding.
  var message = "{'type': 'echo', 'data': {'msg': 'hello world'}}"; 

  connection.send(message);
</script>

When the script gets executed, it will get a reply from server, which is issued by EchoEventHandler.proceed.
There is a precise correspondance between 'type' is the json sent from the client and the 'event_type' that is
defined in the EchoEventHandler.

Example
=======

$ PYTHONPATH setup ...
$ export FROG_SETTINGS_MODULE=echo.settings
$ python echo/manage.py serve

Usage
=====
As many utilities are being built into commands, such as create_project or create_handler,
the detailed usage documentation will be written later.

But if you are looking to give a quick try, you can follow the structure of the echo example.


Benchmark
=========

Frog is based on gevent and ws4py (which comes with a dropped-in replacement over gevent's wsgi handler). 
It should have advantages that gevent ships. I did a very simple test with my chrome console,
and my ubuntu virtualized on vmware-fusion with 512mb + 1 core, with opening all kinds of applications
and my DEV environment, the server and client is able to talk 10,000 times in 5 seconds.
This is not that good actually, but there are much to do about it. It will be attention in futurn
versions.

Dependencies
============

Frog depends only what ws4py and gevent depended, plus these two packages themselves of course.